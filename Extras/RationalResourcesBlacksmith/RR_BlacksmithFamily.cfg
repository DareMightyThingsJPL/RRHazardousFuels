// Add Blacksmith functionality to parts that opt in

// Add RRWork to fully equipped EL workshops
// Scale Blacksmith efficacy to EL productivity factor

@PART:HAS[~BlacksmithWorkFactor,@MODULE[ELWorkshop]:HAS[#ProductivityFactor[>0.99]]]:NEEDS[ExtraplanetaryLaunchpads,!SimpleConstruction]:FOR[RationalResourcesBlacksmith]
{
	BlacksmithWorkFactor = #$/MODULE[ELWorkshop]/ProductivityFactor$
	@BlacksmithWorkFactor *= 2 // Workshops have about twice the "equipment factor" of science labs (range: 2 - 10)
}

// Add ThermalPower to EL smelters
// Scale Blacksmith efficacy to EL converter rate

@PART:HAS[~BlacksmithFurnaceFactor,@MODULE[ELConverter]:HAS[#ConverterName[Smelter]]]:NEEDS[ExtraplanetaryLaunchpads,!SimpleConstruction]:FOR[RationalResourcesBlacksmith]
{
	BlacksmithFurnaceFactor = #$/MODULE[ELConverter]:HAS[#ConverterName[*Smelter]]/Rate$
	@BlacksmithFurnaceFactor *= 2 // Smelters have about twice the "equipment factor" of science labs (range: 1.6 - 10)
}

@PART:HAS[#BlacksmithWorkFactor,!MODULE[ModuleSystemHeat]]:NEEDS[SystemHeatConverters]
{
	%MODULE[ModuleSystemHeat]
	{
		%volume = #$/mass$
		%moduleID = isru
		%iconName = Icon_Gears
		%ignoreTemperature = true
	}
}

@PART:HAS[#BlacksmithFurnaceFactor,!MODULE[ModuleSystemHeat]]:NEEDS[SystemHeatConverters]
{
	%MODULE[ModuleSystemHeat]
	{
		%volume = #$/mass$
		%moduleID = isru
		%iconName = Icon_Gears
		%ignoreTemperature = true
	}
}



// = = = Work = = =

@PART:HAS[#BlacksmithWorkFactor]:NEEDS[!SystemHeatConverters]
{
	MODULE
	{
		name = ModuleResourceConverter
		ConverterName = Blacksmith [Work]
		StartActionName = Start Blacksmith [Work]
		StopActionName = Stop Blacksmith [Work]
		ToggleActionName = Toggle Blacksmith [Work]
		AutoShutdown = true
		GeneratesHeat = false
		UseSpecialistBonus = true
		SpecialistEfficiencyFactor = 0.2
		SpecialistBonusBase = 0.05
		ExperienceEffect = FailureRepairSkill
		EfficiencyBonus = 1
		// Consume about 7.5% of the EC of a mid-tier lab to produce the same work
		// (but produce no heat or ThermalPower)
		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 1
			@Ratio *= #$/BlacksmithWorkFactor$
		}
		OUTPUT_RESOURCE
		{
			ResourceName = RRWork
			Ratio = 0.4
			@Ratio *= #$/BlacksmithWorkFactor$
			FlowMode = ALL_VESSEL
		}
	}
	RESOURCE
	{
		name = RRWork
		amount = 0
		maxAmount = 0.4
		@maxAmount *= #$../BlacksmithWorkFactor$
	}
}

@PART:HAS[#BlacksmithWorkFactor]:NEEDS[SystemHeatConverters]
{
	MODULE
	{
		name = ModuleSystemHeatConverter
		moduleID = Blacksmith [Work]
		systemHeatModuleID = isru
		shutdownTemperature = 2000
		systemOutletTemperature = 900 // temp for freeing water from hydrate regolith. other values could be: 400k for production of hydrazine, 5-600k for decomposition of hydrates, 700 for sabatier process, 373-1000k for high temp electrolysis of water.
		systemPower = 0.9
		@systemPower *= #$/BlacksmithWorkFactor$
		systemEfficiency
		{
			key = 0 0
			key = 600 0 0 0
			key = 900 1
		}
		ConverterName = Blacksmith [Work]
		StartActionName = Start Blacksmith [Work]
		StopActionName = Stop Blacksmith [Work]
		ToggleActionName = Toggle Blacksmith [Work]
		FillAmount = 1
		AutoShutdown = False
		GeneratesHeat = False
		UseSpecialistBonus = True
		SpecialistEfficiencyFactor = 0.2
		SpecialistBonusBase = 0.05
		ExperienceEffect = FailureRepairSkill
		EfficiencyBonus = 1
		// Consume about 7.5% of the EC of a mid-tier lab to produce the same work
		// (but produce no heat or ThermalPower)
		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 1
			@Ratio *= #$/BlacksmithWorkFactor$
		}
		OUTPUT_RESOURCE
		{
			ResourceName = RRWork
			Ratio = 0.4
			@Ratio *= #$/BlacksmithWorkFactor$
			FlowMode = ALL_VESSEL
		}
	}
	RESOURCE
	{
		name = RRWork
		amount = 0
		maxAmount = 0.4
		@maxAmount *= #$/BlacksmithWorkFactor$
	}
}



// = = = Furnace = = =
// Blacksmith furnaces are all-electric

@PART:HAS[#BlacksmithFurnaceFactor]:NEEDS[!SystemHeatConverters]
{
	MODULE
	{
		name = ModuleResourceConverter
		ConverterName = Blacksmith [Furnace]
		StartActionName = Start Blacksmith [Furnace]
		StopActionName = Stop Blacksmith [Furnace]
		AutoShutdown = true
		GeneratesHeat = false
		//DefaultShutoffTemp = 0.8
		UseSpecialistBonus = true
		SpecialistEfficiencyFactor = 0.2
		SpecialistBonusBase = 0.05
		//UseSpecialistHeatBonus = true
		//SpecialistHeatFactor = 0.1
		ExperienceEffect = FailureRepairSkill
		EfficiencyBonus = 1
		// Consume about 90% of the EC of a high-tier lab to produce the same ThermalPower
		// (but produce no work)
		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 22
			@Ratio *= #$/BlacksmithFurnaceFactor$
		}
		OUTPUT_RESOURCE
		{
			ResourceName = ThermalPower
			@ResourceName:NEEDS[ClassicStock,!CommunityResourcePack] = CoreHeat
			Ratio = 0.02
			@Ratio *= #$/BlacksmithFurnaceFactor$
			DumpExcess = True
			FlowMode = ALL_VESSEL
		}
	}
	RESOURCE
	{
		name = ThermalPower
		@name:NEEDS[ClassicStock,!CommunityResourcePack] = CoreHeat
		amount = 0
		maxAmount = 1
		@maxAmount *= #$../BlacksmithFurnaceFactor$
	}
}

@PART:HAS[#BlacksmithFurnaceFactor]:NEEDS[SystemHeatConverters]
{
	MODULE
	{
		name = ModuleSystemHeatConverter
		moduleID = Blacksmith [Furnace]
		systemHeatModuleID = isru
		shutdownTemperature = 1500
		systemOutletTemperature = 900 // temp for freeing water from hydrate regolith. other values could be: 400k for production of hydrazine, 5-600k for decomposition of hydrates, 700 for sabatier process, 373-1000k for high temp electrolysis of water.
		systemPower = 2.2
		@systemPower *= #$/BlacksmithFurnaceFactor$
		systemEfficiency
		{
			key = 0 0
			key = 600 0 0 0
			key = 900 1
		}
		ConverterName = Blacksmith [Furnace]
		StartActionName = Start Blacksmith [Furnace]
		StopActionName = Stop Blacksmith [Furnace]
		ToggleActionName = Toggle Blacksmith [Furnace]
		FillAmount = 1
		AutoShutdown = False
		GeneratesHeat = False
		UseSpecialistBonus = True
		SpecialistEfficiencyFactor = 0.2
		SpecialistBonusBase = 0.05
		ExperienceEffect = FailureRepairSkill
		EfficiencyBonus = 1
		// Consume about 7.5% of the EC of a mid-tier lab to produce the same work
		// (but produce no heat or ThermalPower)
		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 22
			@Ratio *= #$/BlacksmithFurnaceFactor$
		}
		OUTPUT_RESOURCE
		{
			ResourceName = ThermalPower
			@ResourceName:NEEDS[ClassicStock,!CommunityResourcePack] = CoreHeat
			Ratio = 0.02
			@Ratio *= #$/BlacksmithFurnaceFactor$
			DumpExcess = True
			FlowMode = ALL_VESSEL
		}
	}
	RESOURCE
	{
		name = ThermalPower
		@name:NEEDS[ClassicStock,!CommunityResourcePack] = CoreHeat
		amount = 0
		maxAmount = 0.1
		@maxAmount *= #$../BlacksmithFurnaceFactor$
	}
}



// = = = Kerbalism System Heat = = =

@PART:HAS[@MODULE[ModuleSystemHeatConverter]:HAS[@moduleID[Blacksmith*]]]:NEEDS[zKerbalismSystemHeat]
{
	@MODULE[ModuleSystemHeatConverter]:HAS[@moduleID[Blacksmith*]],*
	{
		@name = SystemHeatConverterKerbalism
	}
}



// = = = Tags = = =

@PART:HAS[#BlacksmithWorkFactor,#BlacksmithFurnaceFactor]
{
	@tags ^= :$: blacksmith:
	@description ^= :$: <br><#4FBBFF>Includes Blacksmith workshop and furnace.</color>
}

@PART:HAS[#BlacksmithWorkFactor,~BlacksmithFurnaceFactor]
{
	@tags ^= :$: blacksmith:
	@description ^= :$: <br><#4FBBFF>Includes Blacksmith workshop (furnace not included).</color>
}

@PART:HAS[~BlacksmithWorkFactor,#BlacksmithFurnaceFactor]
{
	@tags ^= :$: blacksmith:
	@description ^= :$: <br><#4FBBFF>Includes Blacksmith furnace (workshop not included).</color>
}
