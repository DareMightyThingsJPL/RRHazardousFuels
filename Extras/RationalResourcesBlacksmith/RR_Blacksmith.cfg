// Core mod "RationalResourcesBlacksmith"

// Adds "Blacksmith" features to the stock science lab. The Blacksmith is a concept system for refilling non-transferrable resources in-flight.
// Supports Ablator, SolidFuel, EnrichedUranium.

PARTUPGRADE:NEEDS[RationalResourcesCompanion]
{
	name = RR_Work2
	partIcon = Large_Crewed_Lab
	techRequired = advMetalworks
	entryCost = 5000
	cost = 0 // for display only; all parts implementing this will need a PartStatsUpgradeModule with cost = this.
	title = RR Blacksmith Level 2
	basicInfo = Installs advanced equipment in associated parts for more efficient work.
	manufacturer = Kenron
	description = Enables level 2 blacksmith which is equivalent to 3x level 1 blacksmith.
}
PARTUPGRADE:NEEDS[RationalResourcesCompanion]
{
	name = RR_Work3
	partIcon = Large_Crewed_Lab
	techRequired = nanolathing
	entryCost = 15000
	cost = 0 // for display only; all parts implementing this will need a PartStatsUpgradeModule with cost = this.
	title = RR Blacksmith Level 3
	basicInfo = installs advanced equipment in associated parts for more efficient work.
	manufacturer = Kenron
	description = Enables level 3 blacksmith which is equivalent to 3x level 2 blacksmith.
}
PARTUPGRADE:NEEDS[RationalResourcesCompanion,CommunityTechTree]
{
	name = RR_Work4
	partIcon = Large_Crewed_Lab
	techRequired = exoticAlloys
	entryCost = 15000
	cost = 0 // for display only; all parts implementing this will need a PartStatsUpgradeModule with cost = this.
	title = RR Blacksmith Level 4
	basicInfo = installs exotic equipment in associated parts for more efficient work.
	manufacturer = Kenron
	description = Enables level 4 blacksmith which is equivalent to 3x level 3 blacksmith.
}


// = = = Default = = =
// Equip stock science lab with RR Blacksmith

@PART[Large_Crewed_Lab]:NEEDS[RationalResourcesCompanion]:FOR[RationalResourcesBlacksmith]
{
	RRBS_ECL1 = 11
	RRBS_WorkL1 = 0.2
	RRBS_TPL1 = 0.01
	@RRBS_ECL1 *= #$CrewCapacity$
	@RRBS_WorkL1 *= #$CrewCapacity$
	@RRBS_TPL1 *= #$CrewCapacity$
	
	RRBS_ECL2 = 33
	RRBS_WorkL2 = 0.6
	RRBS_TPL2 = 0.03
	@RRBS_ECL2 *= #$CrewCapacity$
	@RRBS_WorkL2 *= #$CrewCapacity$
	@RRBS_TPL2 *= #$CrewCapacity$
	
	RRBS_ECL3 = 99
	RRBS_WorkL3 = 1.8
	RRBS_TPL3 = 0.09
	@RRBS_ECL3 *= #$CrewCapacity$
	@RRBS_WorkL3 *= #$CrewCapacity$
	@RRBS_TPL3 *= #$CrewCapacity$
	
	RRBS_ECL4 = 299
	RRBS_WorkL4 = 5.4
	RRBS_TPL4 = 0.27
	@RRBS_ECL4 *= #$CrewCapacity$
	@RRBS_WorkL4 *= #$CrewCapacity$
	@RRBS_TPL4 *= #$CrewCapacity$
	
	MODULE
	{
		name = ModuleOverheatDisplay
	}
	MODULE
	{
		name = ModuleResourceConverter
		ConverterName = Blacksmith
		StartActionName = Start Blacksmith
		StopActionName = Stop Blacksmith
		AutoShutdown = true
		GeneratesHeat = true
		DefaultShutoffTemp = 0.8
		UseSpecialistBonus = true
		SpecialistEfficiencyFactor = 0.2
		SpecialistBonusBase = 0.05
		UseSpecialistHeatBonus = true
		SpecialistHeatFactor = 0.1
		ExperienceEffect = FailureRepairSkill
		EfficiencyBonus = 1
		TemperatureModifier
		{
			key = 300 1250 0 3.024184
			key = 900 2250 -0.05 -46
			key = 905 0 0 0
		}
		ThermalEfficiency
		{
			key = 0 0 0 0
			key = 500 0.1 0 0
			key = 900 1.0 0 0
		}
		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = #$/RRBS_ECL1$
		}
		OUTPUT_RESOURCE
		{
			ResourceName = RRWork
			Ratio = #$/RRBS_WorkL1$
			FlowMode = ALL_VESSEL
		}
		OUTPUT_RESOURCE
		{
			ResourceName = ThermalPower
			Ratio = #$/RRBS_TPL1$
			DumpExcess = True
			FlowMode = ALL_VESSEL
		}
	}
	MODULE
	{
		name = ModuleCoreHeat
		CoreTempGoal = 900
		MaxCoolant = 60
		CoreToPartRatio = 0.1
		CoreTempGoalAdjustment = 0
		CoreEnergyMultiplier = 0.1
		HeatRadiantMultiplier = 0.25
		CoolingRadiantMultiplier = 0
		HeatTransferMultiplier = 0
		CoolantTransferMultiplier = 0.01
		radiatorCoolingFactor = 1
		radiatorHeatingFactor = 0.05
		MaxCalculationWarp = 1000
		CoreShutdownTemp = 2000
	}
	MODULE
	{
		name = ModuleB9PartSwitch
		baseVolume = 0
		moduleID = Blacksmith
		switcherDescription = Blacksmith Level
		switcherDescriptionPlural = Blacksmith Levels
		// switchInFlight = False
		SUBTYPE
		{
			name = Work1
			title = Level 1
			tankType = RR_Work
			primaryColor = Burgundy
			secondaryColor = BrightOrange
			volumeAdded = 0.2
			@volumeAdded *= #$/CrewCapacity$
			defaultSubtypePriority = 1 // Highest is default
			descriptionDetail = #Supports $/CrewCapacity$ kerbals with basic equipment.<br><b>Requires:</b> <color="yellow">$/RRBS_ECL1$ EC/s + Engineer with Failure Repair skill</color><br><b>Produces:</b> <color="yellow">$/RRBS_WorkL1$ Work + $/RRBS_TPL1$ ThermalPower.</color>
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleResourceConverter
					ConverterName = Blacksmith
				}
				DATA
				{
					TemperatureModifier
					{
						key = 300 1250 0 3.024184
						key = 900 2250 -0.05 -46
						key = 905 0 0 0
					}
					INPUT_RESOURCE
					{
						ResourceName = ElectricCharge
						Ratio = #$/RRBS_ECL1$
					}
					OUTPUT_RESOURCE
					{
						ResourceName = RRWork
						Ratio = #$/RRBS_WorkL1$
						DumpExcess = True
						FlowMode = STAGE_PRIORITY_FLOW
					}
					OUTPUT_RESOURCE
					{
						ResourceName = ThermalPower
						Ratio = #$/RRBS_TPL1$
						DumpExcess = True
						FlowMode = ALL_VESSEL
					}
				}
			}
		}
		SUBTYPE
		{
			name = Work2
			title = Level 2
			tankType = RR_Work
			primaryColor = Burgundy
			secondaryColor = BrightOrange
			volumeAdded = 0.6
			@volumeAdded *= #$/CrewCapacity$
			defaultSubtypePriority = 2
			upgradeRequired = RR_Work2
			addedMass = 0.8
			addedCost = 8200
			descriptionDetail = #Supports $/CrewCapacity$ kerbals with improved equipment.<br><b>Requires:</b> <color="yellow">$/RRBS_ECL2$ EC/s + Engineer with Failure Repair skill</color><br><b>Produces:</b> <color="yellow">$/RRBS_WorkL2$ Work + $/RRBS_TPL2$ ThermalPower.</color><br><b>Unlocks at:</b> <#4FBBFF>Advanced Metal Works</color>
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleResourceConverter
					ConverterName = Blacksmith
				}
				DATA
				{
					TemperatureModifier
					{
						key = 300 2750 0 0.2414283
						key = 900 2250 -0.5 -46
						key = 905 0 0 0
					}
					INPUT_RESOURCE
					{
						ResourceName = ElectricCharge
						Ratio = #$/RRBS_ECL2$
					}
					OUTPUT_RESOURCE
					{
						ResourceName = RRWork
						Ratio = #$/RRBS_WorkL2$
						DumpExcess = True
						FlowMode = STAGE_PRIORITY_FLOW
					}
					OUTPUT_RESOURCE
					{
						ResourceName = ThermalPower
						Ratio = #$/RRBS_TPL2$
						DumpExcess = True
						FlowMode = ALL_VESSEL
					}
				}
			}
		}
		SUBTYPE
		{
			name = Work3
			title = Level 3
			tankType = RR_Work
			primaryColor = Burgundy
			secondaryColor = BrightOrange
			volumeAdded = 1.8
			@volumeAdded *= #$/CrewCapacity$
			defaultSubtypePriority = 3
			upgradeRequired = RR_Work3
			addedMass = 1.6
			addedCost = 16400
			descriptionDetail = #Supports $/CrewCapacity$ kerbals with advanced equipment.<br><b>Requires:</b> <color="yellow">$/RRBS_ECL3$ EC/s + Engineer with Failure Repair skill</color><br><b>Produces:</b> <color="yellow">$/RRBS_WorkL3$ Work + $/RRBS_TPL3$ ThermalPower.</color><br><b>Unlocks at:</b> <#4FBBFF>Nanolathing</color>
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleResourceConverter
					ConverterName = Blacksmith
				}
				DATA
				{
					TemperatureModifier
					{
						key = 300 4250 0 1.122843
						key = 900 2250 -0.5 -46
						key = 905 0 0 0
					}
					INPUT_RESOURCE
					{
						ResourceName = ElectricCharge
						Ratio = #$/RRBS_ECL3$
					}
					OUTPUT_RESOURCE
					{
						ResourceName = RRWork
						Ratio = #$/RRBS_WorkL3$
						DumpExcess = True
						FlowMode = STAGE_PRIORITY_FLOW
					}
					OUTPUT_RESOURCE
					{
						ResourceName = ThermalPower
						Ratio = #$/RRBS_TPL3$
						DumpExcess = True
						FlowMode = ALL_VESSEL
					}
				}
			}
		}
		SUBTYPE:NEEDS[CommunityTechTree]
		{
			name = Work4
			title = Level 4
			tankType = RR_Work
			primaryColor = Burgundy
			secondaryColor = BrightOrange
			volumeAdded = 5.4
			@volumeAdded *= #$/CrewCapacity$
			defaultSubtypePriority = 4
			upgradeRequired = RR_Work4
			addedMass = 2.4
			addedCost = 24600
			descriptionDetail = #Supports $/CrewCapacity$ kerbals with exotic equipment.<br><b>Requires:</b> <color="yellow">$/RRBS_ECL4$ EC/s + Engineer with Failure Repair skill</color><br><b>Produces:</b> <color="yellow">$/RRBS_WorkL4$ Work + $/RRBS_TPL4$ ThermalPower.</color><br><b>Unlocks at:</b> <#4FBBFF>Exotic Alloys</color>
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleResourceConverter
					ConverterName = Blacksmith
				}
				DATA
				{
					TemperatureModifier
					{
						key = 300 4250 0 1.122843
						key = 900 2250 -0.5 -46
						key = 905 0 0 0
					}
					INPUT_RESOURCE
					{
						ResourceName = ElectricCharge
						Ratio = #$/RRBS_ECL4$
					}
					OUTPUT_RESOURCE
					{
						ResourceName = RRWork
						Ratio = #$/RRBS_WorkL4$
						DumpExcess = True
						FlowMode = STAGE_PRIORITY_FLOW
					}
					OUTPUT_RESOURCE
					{
						ResourceName = ThermalPower
						Ratio = #$/RRBS_TPL4$
						DumpExcess = True
						FlowMode = ALL_VESSEL
					}
				}
			}
		}
	}
}

@PART[Large_Crewed_Lab]:NEEDS[RationalResourcesCompanion,SystemHeatConverters]:FOR[RationalResourcesBlacksmith]
{
	!MODULE[ModuleOverheatDisplay]{}
	!MODULE[ModuleResourceConverter]{}
	!MODULE[ModuleCoreHeat]{}
	
	MODULE
	{
		name = ModuleSystemHeatConverter
		moduleID = Blacksmith
		systemHeatModuleID = isru
		shutdownTemperature = 1500
		systemOutletTemperature = 900 // temp for freeing water from hydrate regolith. other values could be: 400k for production of hydrazine, 5-600k for decomposition of hydrates, 700 for sabatier process, 373-1000k for high temp electrolysis of water.
		systemPower = 0.1
		@systemPower *= #$/RRBS_ECL1$
		systemEfficiency
		{
			key = 0 0
			key = 600 0 0 0
			key = 900 1
		}
		ConverterName = Blacksmith
		StartActionName = Start Blacksmith
		StopActionName = Stop Blacksmith
		ToggleActionName = Toggle Blacksmith
		FillAmount = 1
		AutoShutdown = False
		GeneratesHeat = False
		UseSpecialistBonus = True
		SpecialistEfficiencyFactor = 0.2
		SpecialistBonusBase = 0.05
		ExperienceEffect = FailureRepairSkill
		EfficiencyBonus = 1
		// Consume about 7.5% of the EC of a mid-tier lab to produce the same work
		// (but produce no heat or ThermalPower)
		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = #$/RRBS_ECL1$
		}
		OUTPUT_RESOURCE
		{
			ResourceName = RRWork
			Ratio = #$/RRBS_WorkL1$
			FlowMode = ALL_VESSEL
		}
		OUTPUT_RESOURCE
		{
			ResourceName = ThermalPower
			Ratio = #$/RRBS_TPL1$
			DumpExcess = True
			FlowMode = ALL_VESSEL
		}
	}
	@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[Blacksmith]]
	{
		@SUBTYPE[Work1]
		{
			@MODULE
			{
				@IDENTIFIER[ModuleResourceConverter]
				{
					@name = ModuleSystemHeatConverter
				}
				@DATA
				{
					!TemperatureModifier {}
					systemPower = 0.1
					@systemPower *= #$/RRBS_ECL1$
				}
			}
		}
		@SUBTYPE[Work2]
		{
			@MODULE
			{
				@IDENTIFIER[ModuleResourceConverter]
				{
					@name = ModuleSystemHeatConverter
				}
				@DATA
				{
					!TemperatureModifier {}
					systemPower = 0.1
					@systemPower *= #$/RRBS_ECL2$
				}
			}
		}
		@SUBTYPE[Work3]
		{
			@MODULE
			{
				@IDENTIFIER[ModuleResourceConverter]
				{
					@name = ModuleSystemHeatConverter
				}
				@DATA
				{
					!TemperatureModifier {}
					systemPower = 0.1
					@systemPower *= #$/RRBS_ECL3$
				}
			}
		}
		@SUBTYPE[Work4]
		{
			@MODULE
			{
				@IDENTIFIER[ModuleResourceConverter]
				{
					@name = ModuleSystemHeatConverter
				}
				@DATA
				{
					!TemperatureModifier {}
					systemPower = 0.1
					@systemPower *= #$/RRBS_ECL4$
				}
			}
		}
		
	}
}
@PART[Large_Crewed_Lab]:NEEDS[SystemHeatConverters,zKerbalismSystemHeat]
{
	@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[Blacksmith]]
	{
		@SUBTYPE[Work*],*
		{
			@MODULE
			{
				@IDENTIFIER[ModuleResourceConverter]
				{
					@name = SystemHeatConverterKerbalism
				}
			}
		}
	}
}

// = = = Nuclear storage = = =

// Fission fuel tanks refill EnrichedUranium
@PART:HAS[@RESOURCE[EnrichedUranium]]:NEEDS[RationalResourcesCompanion,CommunityResourcePack]:FOR[zRationalResources]
{
	@description ^= :$: <br><#4FBBFF>Nuclear fuel can be refilled by Blacksmith. Nuclear waste can be sealed and safely disposed.</color>
	MODULE
	{
		name = ModuleResourceConverter
		ConverterName = Refill EnrichedUranium
		StartActionName = Start Refill EnrichedUranium
		StopActionName = Stop Refill EnrichedUranium
		AutoShutdown = true
		EfficiencyBonus = 1
		INPUT_RESOURCE
		{
			ResourceName = RRWork // simulates EVA work
			Ratio = 0.06
			FlowMode = ALL_VESSEL
		}
		INPUT_RESOURCE
		{
			ResourceName = Uraninite
			Ratio = 0.036
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE
		{
			ResourceName = ThermalPower
			Ratio = 0.15
			FlowMode = ALL_VESSEL
		}
		OUTPUT_RESOURCE
		{
			ResourceName = EnrichedUranium // does not crossfeed so heatshield needs to emulate EVA work
			Ratio = 0.0217
			DumpExcess = false
			FlowMode = NO_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Oxygen
			Ratio = 22.69504
			DumpExcess = true
			FlowMode = ALL_VESSEL
		}
	}
	MODULE
	{
		name = ModuleResourceConverter
		ConverterName = Dispose DepletedFuel
		StartActionName = Start Dispose DepletedFuel
		StopActionName = Stop Dispose DepletedFuel
		AutoShutdown = true
		EfficiencyBonus = 1
		INPUT_RESOURCE
		{
			ResourceName = RRWork // simulates EVA work
			Ratio = 0.6
			FlowMode = ALL_VESSEL
		}
		INPUT_RESOURCE // Let's excavate and bury the waste with 3x its weight in Ore
		{
			ResourceName = Ore
			Ratio = 0.3291
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE
		{
			ResourceName = DepletedFuel
			@ResourceName:NEEDS[ClassicStock,!CommunityResourcePack] = NuclearWaste
			Ratio = 0.1
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}
}
@PART:HAS[@RESOURCE[NuclearFuel]]:NEEDS[RationalResourcesCompanion,ClassicStock,!CommunityResourcePack]:FOR[zRationalResources]
{
	@description ^= :$: <br><#4FBBFF>Nuclear fuel can be refilled by Blacksmith. Nuclear waste can be sealed and safely disposed.</color>
	MODULE
	{
		name = ModuleResourceConverter
		ConverterName = Refill NuclearFuel
		StartActionName = Start Refill NuclearFuel
		StopActionName = Stop Refill NuclearFuel
		AutoShutdown = true
		EfficiencyBonus = 1
		INPUT_RESOURCE
		{
			ResourceName = RRWork // simulates EVA work
			Ratio = 0.006
			FlowMode = ALL_VESSEL
		}
		INPUT_RESOURCE
		{
			ResourceName = Blutonium
			Ratio = 0.3862
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE
		{
			ResourceName = CoreHeat
			Ratio = 1.5
			FlowMode = ALL_VESSEL
		}
		OUTPUT_RESOURCE
		{
			ResourceName = NuclearFuel // does not crossfeed so heatshield needs to emulate EVA work
			Ratio = 0.001
			DumpExcess = false
			FlowMode = NO_FLOW
		}
	}
	MODULE
	{
		name = ModuleResourceConverter
		ConverterName = Dispose NuclearWaste
		StartActionName = Start Dispose NuclearWaste
		StopActionName = Stop Dispose NuclearWaste
		AutoShutdown = true
		EfficiencyBonus = 1
		INPUT_RESOURCE
		{
			ResourceName = RRWork // simulates EVA work
			Ratio = 0.6
			FlowMode = ALL_VESSEL
		}
		INPUT_RESOURCE // Let's excavate and bury the waste with 3x its weight in Ore
		{
			ResourceName = Ore
			Ratio = 0.3291
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE
		{
			ResourceName = NuclearWaste
			Ratio = 0.1
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}
}



// = = = Heatshields = = =

@PART:HAS[@MODULE[ModuleAblator]:HAS[#ablativeResource[Ablator]]]:NEEDS[RationalResourcesCompanion]:FOR[RationalResourcesBlacksmith]
{
	@description ^= :$: <br><#4FBBFF>Ablator can be refilled by Blacksmith.</color>
	MODULE
	{
		name = ModuleResourceConverter
		ConverterName = Refill Ablator
		StartActionName = Start Refill Ablator
		StopActionName = Stop Refill Ablator
		AutoShutdown = true
		EfficiencyBonus = 1
		INPUT_RESOURCE
		{
			ResourceName = RRWork // simulates EVA work
			Ratio = 0.2
			FlowMode = ALL_VESSEL
		}
		INPUT_RESOURCE
		{
			ResourceName = Ore
			Ratio = 0.165
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE
		{
			ResourceName = ThermalPower
			@ResourceName:NEEDS[ClassicStock,!CommunityResourcePack] = CoreHeat
			Ratio = 0.1
			FlowMode = ALL_VESSEL
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Ablator // does not crossfeed so heatshield needs to emulate EVA work
			Ratio = 0.165
			DumpExcess = false
			FlowMode = NO_FLOW
		}
	}
	MODULE:NEEDS[CommunityResourcePack]
	{
		name = ModuleB9PartSwitch
		moduleID = InputSwitch
		switcherDescription = Input mix
		switcherDescriptionPlural = Input mixes
		switchInFlight = True
		SUBTYPE
		{
			name = Ore
			title = Ore
			primaryColor = ResourceColorOre
			secondaryColor = ResourceColorOre
			defaultSubtypePriority = 1
			descriptionSummary = Basic chain for easy players.<br><color="orange">Please quicksave + quickload after applying.</color>
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleResourceConverter
					ConverterName = Refill Ablator
				}
				DATA
				{
					INPUT_RESOURCE
					{
						ResourceName = Ore
						Ratio = 0.165
						FlowMode = STAGE_PRIORITY_FLOW
					}
					INPUT_RESOURCE
					{
						ResourceName = ThermalPower
						Ratio = 0.1
						FlowMode = ALL_VESSEL
					}
					INPUT_RESOURCE
					{
						ResourceName = RRWork // simulates EVA work
						Ratio = 0.2
						FlowMode = ALL_VESSEL
					}
					OUTPUT_RESOURCE
					{
						ResourceName = Ablator // does not crossfeed so heatshield needs to emulate EVA work
						Ratio = 0.165
						DumpExcess = false
						FlowMode = NO_FLOW
					}
				}
			}
		}
		SUBTYPE
		{
			name = Carbon
			title = Carbon + Water
			primaryColor = Dark
			secondaryColor = Ocean
			defaultSubtypePriority = 2
			descriptionSummary = Advanced chain.<br><color="orange">Please quicksave + quickload after applying.</color>
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleResourceConverter
					ConverterName = Refill Ablator
				}
				DATA
				{
					INPUT_RESOURCE
					{
						ResourceName = Carbon
						Ratio = 0.019
						FlowMode = STAGE_PRIORITY_FLOW
					}
					INPUT_RESOURCE
					{
						ResourceName = Water
						Ratio = 0.721
						FlowMode = STAGE_PRIORITY_FLOW
					}
					INPUT_RESOURCE
					{
						ResourceName = RRWork // simulates EVA work
						Ratio = 0.2
						FlowMode = ALL_VESSEL
					}
					INPUT_RESOURCE
					{
						ResourceName = ThermalPower
						Ratio = 0.1
						FlowMode = ALL_VESSEL
					}
					OUTPUT_RESOURCE
					{
						ResourceName = Ablator
						Ratio = 0.17
						DumpExcess = false
						FlowMode = NO_FLOW
					}
				}
			}
		}
	}
}

@PART:HAS[@MODULE[ModuleAblator]:HAS[#ablativeResource[Ablator]],@RESOURCE[Ablator]:HAS[#maxAmount[>200]]]:NEEDS[RationalResourcesCompanion]:FOR[RationalResourcesBlacksmith]
{
	// maxAmount 200 from stock 1.25m heatshield
	// Increase converter rates for bigger heatshields
	@MODULE:HAS[#ConverterName[Refill?Ablator]]
	{
		@INPUT_RESOURCE,*
		{
			@Ratio *= #$/RESOURCE[Ablator]/maxAmount$
			@Ratio /= 200
		}
		@OUTPUT_RESOURCE
		{
			@Ratio *= #$/RESOURCE[Ablator]/maxAmount$
			@Ratio /= 200
		}
	}
	@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[InputSwitch]]
	{
		@SUBTYPE,*
		{
			@MODULE
			{
				@DATA
				{
					@INPUT_RESOURCE,*
					{
						@Ratio *= #$/RESOURCE[Ablator]/maxAmount$
						@Ratio /= 200
					}
					@OUTPUT_RESOURCE
					{
						@Ratio *= #$/RESOURCE[Ablator]/maxAmount$
						@Ratio /= 200
					}
				}
			}
		}
	}
}

// Solid rockets (re)fill SolidFuel
@PART:HAS[@MODULE[ModuleEngines*]:HAS[@PROPELLANT[SolidFuel]]]:NEEDS[RationalResourcesCompanion]:FOR[RationalResourcesBlacksmith]
{
	@description ^= :$: <br><#4FBBFF>SolidFuel can be refilled by Blacksmith.</color>
	MODULE:NEEDS[CommunityResourcePack]
	{
		name = ModuleResourceConverter
		ConverterName = Refill SolidFuel
		StartActionName = Start Refill SolidFuel
		StopActionName = Stop Refill SolidFuel
		AutoShutdown = true
		EfficiencyBonus = 1
		INPUT_RESOURCE
		{
			ResourceName = Alumina
			Ratio = 40.376
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE
		{
			ResourceName = RRWork // simulates EVA work
			Ratio = 0.2
			FlowMode = ALL_VESSEL
		}
		OUTPUT_RESOURCE
		{
			ResourceName = SolidFuel // does not crossfeed so heatshield needs to emulate EVA work
			Ratio = 0.55
			DumpExcess = false
			FlowMode = NO_FLOW
		}
	}
	MODULE:NEEDS[ClassicStock,!CommunityResourcePack]
	{
		name = ModuleResourceConverter
		ConverterName = Refill SolidFuel
		StartActionName = Start Refill SolidFuel
		StopActionName = Stop Refill SolidFuel
		AutoShutdown = true
		EfficiencyBonus = 1
		INPUT_RESOURCE
		{
			ResourceName = Ore
			Ratio = 1.24
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE
		{
			ResourceName = RRWork // simulates EVA work
			Ratio = 0.2
			FlowMode = ALL_VESSEL
		}
		OUTPUT_RESOURCE
		{
			ResourceName = SolidFuel // does not crossfeed so heatshield needs to emulate EVA work
			Ratio = 0.55
			DumpExcess = false
			FlowMode = NO_FLOW
		}
	}
	
	MODULE:NEEDS[CommunityResourcePack]
	{
		name = ModuleB9PartSwitch
		moduleID = InputSwitch
		switcherDescription = Input mix
		switcherDescriptionPlural = Input mixes
		switchInFlight = True
		SUBTYPE
		{
			name = Alumina
			title = Alumina
			primaryColor = Grey
			secondaryColor = Grey
			defaultSubtypePriority = 3 // Highest is default
			descriptionSummary = Basic chain. Requires Alumina.<br><color="orange">Please quicksave + quickload after applying.</color>
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleResourceConverter
					ConverterName = Refill SolidFuel
				}
				DATA
				{
					INPUT_RESOURCE
					{
						ResourceName = Alumina
						Ratio = 40.376
						FlowMode = STAGE_PRIORITY_FLOW
					}
					INPUT_RESOURCE
					{
						ResourceName = RRWork // simulates EVA work
						Ratio = 0.2
						FlowMode = ALL_VESSEL
					}
					OUTPUT_RESOURCE
					{
						ResourceName = SolidFuel // does not crossfeed so heatshield needs to emulate EVA work
						Ratio = 0.55
						DumpExcess = false
						FlowMode = NO_FLOW
					}
				}
			}
		}
		SUBTYPE
		{
			name = AmmoniumNitrateL
			title = Ammonium Nitrate (Lqd)
			primaryColor = BurntRed
			secondaryColor = PeacockBlue
			defaultSubtypePriority = 1
			descriptionSummary = Advanced chain. Requires <b>LqdAmmonia, LqdNitrogen, LqdOxygen</b>.<br><color="orange">Please quicksave + quickload after applying.</color>
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleResourceConverter
					ConverterName = Refill SolidFuel
				}
				DATA
				{
					INPUT_RESOURCE
					{
						ResourceName = LqdAmmonia
						Ratio = 1.2 // 0.24
						FlowMode = STAGE_PRIORITY_FLOW
					}
					INPUT_RESOURCE
					{
						ResourceName = LqdNitrogen
						Ratio = 0.85 // 0.17
						FlowMode = STAGE_PRIORITY_FLOW
					}
					INPUT_RESOURCE
					{
						ResourceName = LqdOxygen
						Ratio = 2.1 // 0.42
						FlowMode = STAGE_PRIORITY_FLOW
					}
					INPUT_RESOURCE
					{
						ResourceName = RRWork // simulates EVA work
						Ratio = 0.2
						FlowMode = ALL_VESSEL
					}
					OUTPUT_RESOURCE
					{
						ResourceName = SolidFuel
						Ratio = 0.55 // 0.11
						DumpExcess = false
						FlowMode = NO_FLOW
					}
				}
			}
		}
		SUBTYPE
		{
			name = AmmoniumNitrateG
			title = Ammonium Nitrate (Gas)
			primaryColor = BurntRed
			secondaryColor = BabyBlue
			defaultSubtypePriority = 2
			descriptionSummary = Advanced chain. Requires <b>Ammonia, Nitrogen, Oxygen</b>.<br><color="orange">Please quicksave + quickload after applying.</color>
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleResourceConverter
					ConverterName = Refill SolidFuel
				}
				DATA
				{
					INPUT_RESOURCE
					{
						ResourceName = LqdAmmonia
						Ratio =  110.734 // 22.147
						FlowMode = STAGE_PRIORITY_FLOW
					}
					INPUT_RESOURCE
					{
						ResourceName = LqdNitrogen
						Ratio = 55.98 // 11.197
						FlowMode = STAGE_PRIORITY_FLOW
					}
					INPUT_RESOURCE
					{
						ResourceName = LqdOxygen
						Ratio = 170.212 // 34.043
						FlowMode = STAGE_PRIORITY_FLOW
					}
					INPUT_RESOURCE
					{
						ResourceName = RRWork // simulates EVA work
						Ratio = 0.2
						FlowMode = ALL_VESSEL
					}
					OUTPUT_RESOURCE
					{
						ResourceName = SolidFuel
						Ratio = 0.55 // 0.11
						DumpExcess = false
						FlowMode = NO_FLOW
					}
				}
			}
		}
	}
}

@PART:HAS[@MODULE[ModuleEngines*],@RESOURCE[SolidFuel]:HAS[#maxAmount[>2600]]]:NEEDS[RationalResourcesCompanion]:FOR[RationalResourcesBlacksmith]
{
	// maxAmount 2600 from stock Kickback SRB
	// Increase converter rates for bigger SRBs
	@MODULE:HAS[#ConverterName[Refill?SolidFuel]]
	{
		@INPUT_RESOURCE,*
		{
			@Ratio *= #$/RESOURCE[SolidFuel]/maxAmount$
			@Ratio /= 2600
		}
		@OUTPUT_RESOURCE
		{
			@Ratio *= #$/RESOURCE[SolidFuel]/maxAmount$
			@Ratio /= 2600
		}
	}
	@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[InputSwitch]]
	{
		@SUBTYPE,*
		{
			@MODULE
			{
				@DATA
				{
					@INPUT_RESOURCE,*
					{
						@Ratio *= #$/RESOURCE[SolidFuel]/maxAmount$
						@Ratio /= 2600
					}
					@OUTPUT_RESOURCE
					{
						@Ratio *= #$/RESOURCE[SolidFuel]/maxAmount$
						@Ratio /= 2600
					}
				}
			}
		}
	}
}